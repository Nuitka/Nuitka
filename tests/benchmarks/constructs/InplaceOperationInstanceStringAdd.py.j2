{% extends 'RepeatedFunctionCall.py.j2' %}
{% block start %}

module_value1 = 5

class C:
    def __init__(self):

        self.s = '2' * 100000

    def increment(self):
        additiv = '*' * 1000

        self.s += additiv

        return additiv

{% endblock %}
{% block in_function %}
    # Force frame and eliminate forward propagation (currently).
    module_value1

    local_value = C()

    local_value.increment()

import itertools
for x in itertools.repeat(None, 50000):
    calledRepeatedly()

print("OK.")
{% block construct %}
{% endblock %}
